import sys
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QHBoxLayout, QLabel
from PyQt5.QtGui import QFont
import random


class TicTacToe(QWidget):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Tic Tac Toe")
        self.setGeometry(100, 100, 400, 400)

        self.main_layout = QVBoxLayout()
        self.setLayout(self.main_layout)

        self.message_label = QLabel("")
        self.message_label.setFont(QFont("Righteous", 14))
        self.main_layout.addWidget(self.message_label)

        self.board_layout = QVBoxLayout()
        self.main_layout.addLayout(self.board_layout)

        self.cells = []
        for row in range(3):
            row_layout = QHBoxLayout()
            self.board_layout.addLayout(row_layout)
            row_cells = []
            for col in range(3):
                cell = QPushButton("")
                cell.setFont(QFont("Righteous", 14))
                cell.setFixedSize(100, 100)
                cell.clicked.connect(lambda ch, row=row, col=col: self.on_click(row, col))
                row_layout.addWidget(cell)
                row_cells.append(cell)
            self.cells.append(row_cells)

        self.start_button = QPushButton("Start Game")
        self.start_button.setFont(QFont("Righteous", 14))
        self.start_button.clicked.connect(self.start_game)
        self.main_layout.addWidget(self.start_button)

        self.game_active = False
        self.current_player = "X"

    def start_game(self):
        self.game_active = True
        self.current_player = "X"
        self.message_label.setText("")
        for row in self.cells:
            for cell in row:
                cell.setText("")

    def on_click(self, row, col):
        if not self.game_active or self.cells[row][col].text() != "":
            return

        self.cells[row][col].setText(self.current_player)
        if self.check_winner():
            self.message_label.setText(f"{self.current_player} wins!")
            self.game_active = False
        elif self.check_draw():
            self.message_label.setText("It's a draw!")
            self.game_active = False
        else:
            self.current_player = "O" if self.current_player == "X" else "X"
            if self.current_player == "O":
                self.ai_move()

    def check_winner(self):
        for row in range(3):
            if self.cells[row][0].text() == self.cells[row][1].text() == self.cells[row][2].text() != "":
                return True
        for col in range(3):
            if self.cells[0][col].text() == self.cells[1][col].text() == self.cells[2][col].text() != "":
                return True
        if self.cells[0][0].text() == self.cells[1][1].text() == self.cells[2][2].text() != "":
            return True
        if self.cells[0][2].text() == self.cells[1][1].text() == self.cells[2][0].text() != "":
            return True
        return False

    def check_draw(self):
        for row in self.cells:
            for cell in row:
                if cell.text() == "":
                    return False
        return True

    def ai_move(self):
        if random.random() < 0.5:
            self.ai_random_move()
        else:
            if not self.ai_strategic_move():
                self.ai_random_move()

    def ai_random_move(self):
        empty_cells = [(row, col) for row in range(3) for col in range(3) if self.cells[row][col].text() == ""]
        if empty_cells:
            row, col = random.choice(empty_cells)
            self.cells[row][col].setText("O")
            if self.check_winner():
                self.message_label.setText("O wins!")
                self.game_active = False
            elif self.check_draw():
                self.message_label.setText("It's a draw!")
                self.game_active = False
            else:
                self.current_player = "X"

    def ai_strategic_move(self):
        # Try to win
        for row in range(3):
            for col in range(3):
                if self.cells[row][col].text() == "":
                    self.cells[row][col].setText("O")
                    if self.check_winner():
                        return True
                    self.cells[row][col].setText("")

        # Try to block
        for row in range(3):
            for col in range(3):
                if self.cells[row][col].text() == "":
                    self.cells[row][col].setText("X")
                    if self.check_winner():
                        self.cells[row][col].setText("O")
                        return True
                    self.cells[row][col].setText("")

        return False


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = TicTacToe()
    window.show()
    sys.exit(app.exec_())
